{"version":3,"sources":["components/CommentInfo/CommentInfo.jsx","components/CommentList/CommentList.jsx","components/UserInfo/UserInfo.jsx","components/PostInfo/PostInfo.jsx","components/PostList/PostList.jsx","App.jsx","index.jsx"],"names":["CommentInfo","comment","name","email","body","className","href","CommentList","comments","map","id","UserInfo","user","PostInfo","post","title","length","PostList","posts","App","postsFromServer","userId","usersFromServer","find","idOfPost","commentsFromServer","filter","postId","ReactDOM","render","document","getElementById"],"mappings":"408IAAaA,EAAc,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAE1BC,EAGED,EAHFC,KACAC,EAEEF,EAFFE,MACAC,EACEH,EADFG,KAGF,OACE,sBAAKC,UAAU,cAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,wBAAQA,UAAU,oBAAlB,SAAuCH,IAEtC,OAED,mBACEG,UAAU,qBACVC,KAAI,iBAAYH,GAFlB,SAIGA,OAIL,qBAAKE,UAAU,oBAAf,SACGD,QCpBIG,G,MAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACzB,qBAAKH,UAAU,cAAf,SACGG,EACEC,KAAI,SAAAR,GAAO,OACV,cAAC,EAAD,CAEEA,QAASA,GADJA,EAAQS,WCRVC,EAAW,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAEvBV,EAEEU,EAFFV,KACAC,EACES,EADFT,MAGF,OACE,mBAAGE,UAAU,WAAWC,KAAI,iBAAYH,GAAxC,SACGD,KCHMW,G,MAAW,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAEvBC,EAIED,EAJFC,MACAH,EAGEE,EAHFF,KACAJ,EAEEM,EAFFN,SACAJ,EACEU,EADFV,KAGF,OACE,sBAAKC,UAAU,WAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,oBAAIA,UAAU,kBAAd,SAAiCU,IAEjC,8BACG,eAED,cAAC,EAAD,CAAUH,KAAMA,UAIpB,mBAAGP,UAAU,iBAAb,SACGD,IAGH,uBAEqB,IAApBI,EAASQ,OACR,qCACE,uBACA,mBAAG,UAAQ,oBAAX,gCAGF,cAAC,EAAD,CAAaR,SAAUA,SCjClBS,G,MAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACtB,qBAAKb,UAAU,WAAf,SACGa,EAAMT,KAAI,SAAAK,GAAI,OAAI,cAAC,EAAD,CAAwBA,KAAMA,GAAfA,EAAKJ,WCiB9BS,EAAM,kBACjB,0BAASd,UAAU,MAAnB,UACE,oBAAIA,UAAU,aAAd,kCACA,cAAC,EAAD,CAAUa,MAVZE,EAAgBX,KAAI,SAAAK,GAAI,kCACnBA,GADmB,IAEtBF,MAZmBS,EAYEP,EAAKO,OAX5BC,EAAgBC,MAAK,qBAAGb,KAAgBW,MACnC,MAWHb,UARsBgB,EAQMV,EAAKJ,GAPnCe,EAAmBC,QAAO,qBAAGC,SAAwBH,QAD7B,IAAAA,EALHH,WCFvBO,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.99bf52d1.chunk.js","sourcesContent":["export const CommentInfo = ({ comment }) => {\n  const {\n    name,\n    email,\n    body,\n  } = comment;\n\n  return (\n    <div className=\"CommentInfo\">\n      <div className=\"CommentInfo__title\">\n        <strong className=\"CommentInfo__name\">{name}</strong>\n\n        {' by '}\n\n        <a\n          className=\"CommentInfo__email\"\n          href={`mailto:${email}`}\n        >\n          {email}\n        </a>\n      </div>\n\n      <div className=\"CommentInfo__body\">\n        {body}\n      </div>\n    </div>\n\n  );\n};\n","import { CommentInfo } from '../CommentInfo';\nimport './CommentList.scss';\n\nexport const CommentList = ({ comments }) => (\n  <div className=\"CommentList\">\n    {comments\n      .map(comment => (\n        <CommentInfo\n          key={comment.id}\n          comment={comment}\n        />\n      ))}\n  </div>\n);\n","export const UserInfo = ({ user }) => {\n  const {\n    name,\n    email,\n  } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import { CommentList } from '../CommentList';\nimport { UserInfo } from '../UserInfo';\n\nimport './PostInfo.scss';\n\nexport const PostInfo = ({ post }) => {\n  const {\n    title,\n    user,\n    comments,\n    body,\n  } = post;\n\n  return (\n    <div className=\"PostInfo\">\n      <div className=\"PostInfo__header\">\n        <h3 className=\"PostInfo__title\">{title}</h3>\n\n        <p>\n          {' Posted by  '}\n\n          <UserInfo user={user} />\n        </p>\n      </div>\n\n      <p className=\"PostInfo__body\">\n        {body}\n      </p>\n\n      <hr />\n\n      {comments.length === 0 ? (\n        <>\n          <hr />\n          <b data-cy=\"NoCommentsMessage\">No comments yet</b>\n        </>\n      ) : (\n        <CommentList comments={comments} />\n      )}\n    </div>\n  );\n};\n","import { PostInfo } from '../PostInfo';\n\nimport './PostList.scss';\n\nexport const PostList = ({ posts }) => (\n  <div className=\"PostList\">\n    {posts.map(post => <PostInfo key={post.id} post={post} />)}\n  </div>\n);\n","import './App.scss';\nimport postsFromServer from './api/posts.json';\nimport commentsFromServer from './api/comments.json';\nimport usersFromServer from './api/users.json';\nimport { PostList } from './components/PostList';\n\nconst findUserOfPost = userId => (\n  usersFromServer.find(({ id }) => id === userId)\n    || null\n);\n\nconst getCommentsOfpost = idOfPost => (\n  commentsFromServer.filter(({ postId }) => postId === idOfPost)\n);\n\nconst posts = () => (\n  postsFromServer.map(post => ({\n    ...post,\n    user: findUserOfPost(post.userId),\n    comments: getCommentsOfpost(post.id),\n  }))\n);\n\nexport const App = () => (\n  <section className=\"App\">\n    <h1 className=\"App__title\">Static list of posts</h1>\n    <PostList posts={posts()} />\n  </section>\n);\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}